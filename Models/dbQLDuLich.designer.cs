#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOANWEBDULICH.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TOURDL")]
	public partial class dbQLDuLichDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHACHSAN(KHACHSAN instance);
    partial void UpdateKHACHSAN(KHACHSAN instance);
    partial void DeleteKHACHSAN(KHACHSAN instance);
    partial void InsertLOAITOUR(LOAITOUR instance);
    partial void UpdateLOAITOUR(LOAITOUR instance);
    partial void DeleteLOAITOUR(LOAITOUR instance);
    partial void InsertMIEN(MIEN instance);
    partial void UpdateMIEN(MIEN instance);
    partial void DeleteMIEN(MIEN instance);
    partial void InsertPHUONGTIEN(PHUONGTIEN instance);
    partial void UpdatePHUONGTIEN(PHUONGTIEN instance);
    partial void DeletePHUONGTIEN(PHUONGTIEN instance);
    partial void InsertTOURDULICH(TOURDULICH instance);
    partial void UpdateTOURDULICH(TOURDULICH instance);
    partial void DeleteTOURDULICH(TOURDULICH instance);
    partial void InsertVEPHONG(VEPHONG instance);
    partial void UpdateVEPHONG(VEPHONG instance);
    partial void DeleteVEPHONG(VEPHONG instance);
    partial void InsertVETOUR(VETOUR instance);
    partial void UpdateVETOUR(VETOUR instance);
    partial void DeleteVETOUR(VETOUR instance);
    partial void InsertVEXE(VEXE instance);
    partial void UpdateVEXE(VEXE instance);
    partial void DeleteVEXE(VEXE instance);
    #endregion
		
		public dbQLDuLichDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TOURDLConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDuLichDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDuLichDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDuLichDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDuLichDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHSAN> KHACHSANs
		{
			get
			{
				return this.GetTable<KHACHSAN>();
			}
		}
		
		public System.Data.Linq.Table<LOAITOUR> LOAITOURs
		{
			get
			{
				return this.GetTable<LOAITOUR>();
			}
		}
		
		public System.Data.Linq.Table<MIEN> MIENs
		{
			get
			{
				return this.GetTable<MIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHUONGTIEN> PHUONGTIENs
		{
			get
			{
				return this.GetTable<PHUONGTIEN>();
			}
		}
		
		public System.Data.Linq.Table<TOURDULICH> TOURDULICHes
		{
			get
			{
				return this.GetTable<TOURDULICH>();
			}
		}
		
		public System.Data.Linq.Table<VEPHONG> VEPHONGs
		{
			get
			{
				return this.GetTable<VEPHONG>();
			}
		}
		
		public System.Data.Linq.Table<VETOUR> VETOURs
		{
			get
			{
				return this.GetTable<VETOUR>();
			}
		}
		
		public System.Data.Linq.Table<VEXE> VEXEs
		{
			get
			{
				return this.GetTable<VEXE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKH;
		
		private string _TENKH;
		
		private string _Taikhoan;
		
		private string _Matkhau;
		
		private string _CMND;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private EntitySet<VEPHONG> _VEPHONGs;
		
		private EntitySet<VETOUR> _VETOURs;
		
		private EntitySet<VEXE> _VEXEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKHChanging(int value);
    partial void OnIDKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnTaikhoanChanging(string value);
    partial void OnTaikhoanChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._VEPHONGs = new EntitySet<VEPHONG>(new Action<VEPHONG>(this.attach_VEPHONGs), new Action<VEPHONG>(this.detach_VEPHONGs));
			this._VETOURs = new EntitySet<VETOUR>(new Action<VETOUR>(this.attach_VETOURs), new Action<VETOUR>(this.detach_VETOURs));
			this._VEXEs = new EntitySet<VEXE>(new Action<VEXE>(this.attach_VEXEs), new Action<VEXE>(this.detach_VEXEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(50)")]
		public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(15)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(22)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VEPHONG", Storage="_VEPHONGs", ThisKey="IDKH", OtherKey="IDKH")]
		public EntitySet<VEPHONG> VEPHONGs
		{
			get
			{
				return this._VEPHONGs;
			}
			set
			{
				this._VEPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VETOUR", Storage="_VETOURs", ThisKey="IDKH", OtherKey="IDKH")]
		public EntitySet<VETOUR> VETOURs
		{
			get
			{
				return this._VETOURs;
			}
			set
			{
				this._VETOURs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VEXE", Storage="_VEXEs", ThisKey="IDKH", OtherKey="IDKH")]
		public EntitySet<VEXE> VEXEs
		{
			get
			{
				return this._VEXEs;
			}
			set
			{
				this._VEXEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEPHONGs(VEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_VEPHONGs(VEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_VETOURs(VETOUR entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_VETOURs(VETOUR entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_VEXEs(VEXE entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_VEXEs(VEXE entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHSAN")]
	public partial class KHACHSAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDKS;
		
		private string _TENKS;
		
		private string _DIACHI;
		
		private string _SDTKS;
		
		private System.Nullable<double> _GIA;
		
		private string _ANH;
		
		private string _IDMIEN;
		
		private string _TINHTRANG;
		
		private string _MOTA;
		
		private EntitySet<VEPHONG> _VEPHONGs;
		
		private EntityRef<MIEN> _MIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKSChanging(string value);
    partial void OnIDKSChanged();
    partial void OnTENKSChanging(string value);
    partial void OnTENKSChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTKSChanging(string value);
    partial void OnSDTKSChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnIDMIENChanging(string value);
    partial void OnIDMIENChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    #endregion
		
		public KHACHSAN()
		{
			this._VEPHONGs = new EntitySet<VEPHONG>(new Action<VEPHONG>(this.attach_VEPHONGs), new Action<VEPHONG>(this.detach_VEPHONGs));
			this._MIEN = default(EntityRef<MIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKS", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDKS
		{
			get
			{
				return this._IDKS;
			}
			set
			{
				if ((this._IDKS != value))
				{
					this.OnIDKSChanging(value);
					this.SendPropertyChanging();
					this._IDKS = value;
					this.SendPropertyChanged("IDKS");
					this.OnIDKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKS", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TENKS
		{
			get
			{
				return this._TENKS;
			}
			set
			{
				if ((this._TENKS != value))
				{
					this.OnTENKSChanging(value);
					this.SendPropertyChanging();
					this._TENKS = value;
					this.SendPropertyChanged("TENKS");
					this.OnTENKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKS", DbType="VarChar(22)")]
		public string SDTKS
		{
			get
			{
				return this._SDTKS;
			}
			set
			{
				if ((this._SDTKS != value))
				{
					this.OnSDTKSChanging(value);
					this.SendPropertyChanging();
					this._SDTKS = value;
					this.SendPropertyChanged("SDTKS");
					this.OnSDTKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(50)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMIEN", DbType="Char(3)")]
		public string IDMIEN
		{
			get
			{
				return this._IDMIEN;
			}
			set
			{
				if ((this._IDMIEN != value))
				{
					if (this._MIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMIENChanging(value);
					this.SendPropertyChanging();
					this._IDMIEN = value;
					this.SendPropertyChanged("IDMIEN");
					this.OnIDMIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(5)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_VEPHONG", Storage="_VEPHONGs", ThisKey="IDKS", OtherKey="IDKS")]
		public EntitySet<VEPHONG> VEPHONGs
		{
			get
			{
				return this._VEPHONGs;
			}
			set
			{
				this._VEPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MIEN_KHACHSAN", Storage="_MIEN", ThisKey="IDMIEN", OtherKey="IDMIEN", IsForeignKey=true)]
		public MIEN MIEN
		{
			get
			{
				return this._MIEN.Entity;
			}
			set
			{
				MIEN previousValue = this._MIEN.Entity;
				if (((previousValue != value) 
							|| (this._MIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MIEN.Entity = null;
						previousValue.KHACHSANs.Remove(this);
					}
					this._MIEN.Entity = value;
					if ((value != null))
					{
						value.KHACHSANs.Add(this);
						this._IDMIEN = value.IDMIEN;
					}
					else
					{
						this._IDMIEN = default(string);
					}
					this.SendPropertyChanged("MIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEPHONGs(VEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_VEPHONGs(VEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITOUR")]
	public partial class LOAITOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDLOAI;
		
		private string _TENLOAI;
		
		private EntitySet<TOURDULICH> _TOURDULICHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLOAIChanging(string value);
    partial void OnIDLOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAITOUR()
		{
			this._TOURDULICHes = new EntitySet<TOURDULICH>(new Action<TOURDULICH>(this.attach_TOURDULICHes), new Action<TOURDULICH>(this.detach_TOURDULICHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOAI", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDLOAI
		{
			get
			{
				return this._IDLOAI;
			}
			set
			{
				if ((this._IDLOAI != value))
				{
					this.OnIDLOAIChanging(value);
					this.SendPropertyChanging();
					this._IDLOAI = value;
					this.SendPropertyChanged("IDLOAI");
					this.OnIDLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITOUR_TOURDULICH", Storage="_TOURDULICHes", ThisKey="IDLOAI", OtherKey="IDLOAI")]
		public EntitySet<TOURDULICH> TOURDULICHes
		{
			get
			{
				return this._TOURDULICHes;
			}
			set
			{
				this._TOURDULICHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURDULICHes(TOURDULICH entity)
		{
			this.SendPropertyChanging();
			entity.LOAITOUR = this;
		}
		
		private void detach_TOURDULICHes(TOURDULICH entity)
		{
			this.SendPropertyChanging();
			entity.LOAITOUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MIEN")]
	public partial class MIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDMIEN;
		
		private string _TENMIEN;
		
		private EntitySet<KHACHSAN> _KHACHSANs;
		
		private EntitySet<TOURDULICH> _TOURDULICHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMIENChanging(string value);
    partial void OnIDMIENChanged();
    partial void OnTENMIENChanging(string value);
    partial void OnTENMIENChanged();
    #endregion
		
		public MIEN()
		{
			this._KHACHSANs = new EntitySet<KHACHSAN>(new Action<KHACHSAN>(this.attach_KHACHSANs), new Action<KHACHSAN>(this.detach_KHACHSANs));
			this._TOURDULICHes = new EntitySet<TOURDULICH>(new Action<TOURDULICH>(this.attach_TOURDULICHes), new Action<TOURDULICH>(this.detach_TOURDULICHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMIEN", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDMIEN
		{
			get
			{
				return this._IDMIEN;
			}
			set
			{
				if ((this._IDMIEN != value))
				{
					this.OnIDMIENChanging(value);
					this.SendPropertyChanging();
					this._IDMIEN = value;
					this.SendPropertyChanged("IDMIEN");
					this.OnIDMIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMIEN", DbType="NVarChar(5)")]
		public string TENMIEN
		{
			get
			{
				return this._TENMIEN;
			}
			set
			{
				if ((this._TENMIEN != value))
				{
					this.OnTENMIENChanging(value);
					this.SendPropertyChanging();
					this._TENMIEN = value;
					this.SendPropertyChanged("TENMIEN");
					this.OnTENMIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MIEN_KHACHSAN", Storage="_KHACHSANs", ThisKey="IDMIEN", OtherKey="IDMIEN")]
		public EntitySet<KHACHSAN> KHACHSANs
		{
			get
			{
				return this._KHACHSANs;
			}
			set
			{
				this._KHACHSANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MIEN_TOURDULICH", Storage="_TOURDULICHes", ThisKey="IDMIEN", OtherKey="IDMIEN")]
		public EntitySet<TOURDULICH> TOURDULICHes
		{
			get
			{
				return this._TOURDULICHes;
			}
			set
			{
				this._TOURDULICHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.MIEN = this;
		}
		
		private void detach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.MIEN = null;
		}
		
		private void attach_TOURDULICHes(TOURDULICH entity)
		{
			this.SendPropertyChanging();
			entity.MIEN = this;
		}
		
		private void detach_TOURDULICHes(TOURDULICH entity)
		{
			this.SendPropertyChanging();
			entity.MIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONGTIEN")]
	public partial class PHUONGTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDPT;
		
		private string _TENPT;
		
		private string _LOAIPT;
		
		private string _SUCCHUA;
		
		private string _ANH;
		
		private string _MOTA;
		
		private EntitySet<VEXE> _VEXEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPTChanging(string value);
    partial void OnIDPTChanged();
    partial void OnTENPTChanging(string value);
    partial void OnTENPTChanged();
    partial void OnLOAIPTChanging(string value);
    partial void OnLOAIPTChanged();
    partial void OnSUCCHUAChanging(string value);
    partial void OnSUCCHUAChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    #endregion
		
		public PHUONGTIEN()
		{
			this._VEXEs = new EntitySet<VEXE>(new Action<VEXE>(this.attach_VEXEs), new Action<VEXE>(this.detach_VEXEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPT", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDPT
		{
			get
			{
				return this._IDPT;
			}
			set
			{
				if ((this._IDPT != value))
				{
					this.OnIDPTChanging(value);
					this.SendPropertyChanging();
					this._IDPT = value;
					this.SendPropertyChanged("IDPT");
					this.OnIDPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPT", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TENPT
		{
			get
			{
				return this._TENPT;
			}
			set
			{
				if ((this._TENPT != value))
				{
					this.OnTENPTChanging(value);
					this.SendPropertyChanging();
					this._TENPT = value;
					this.SendPropertyChanged("TENPT");
					this.OnTENPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIPT", DbType="NVarChar(20)")]
		public string LOAIPT
		{
			get
			{
				return this._LOAIPT;
			}
			set
			{
				if ((this._LOAIPT != value))
				{
					this.OnLOAIPTChanging(value);
					this.SendPropertyChanging();
					this._LOAIPT = value;
					this.SendPropertyChanged("LOAIPT");
					this.OnLOAIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUCCHUA", DbType="VarChar(2)")]
		public string SUCCHUA
		{
			get
			{
				return this._SUCCHUA;
			}
			set
			{
				if ((this._SUCCHUA != value))
				{
					this.OnSUCCHUAChanging(value);
					this.SendPropertyChanging();
					this._SUCCHUA = value;
					this.SendPropertyChanged("SUCCHUA");
					this.OnSUCCHUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(50)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_VEXE", Storage="_VEXEs", ThisKey="IDPT", OtherKey="IDPT")]
		public EntitySet<VEXE> VEXEs
		{
			get
			{
				return this._VEXEs;
			}
			set
			{
				this._VEXEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEXEs(VEXE entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = this;
		}
		
		private void detach_VEXEs(VEXE entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOURDULICH")]
	public partial class TOURDULICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDTOUR;
		
		private string _TENTOUR;
		
		private string _ANH;
		
		private System.Nullable<double> _GIA;
		
		private System.Nullable<int> _SONGAY;
		
		private string _MOTA;
		
		private System.Nullable<System.DateTime> _NGAYXUATPHAT;
		
		private string _DIEMDL;
		
		private string _IDLOAI;
		
		private string _IDMIEN;
		
		private EntitySet<VETOUR> _VETOURs;
		
		private EntityRef<LOAITOUR> _LOAITOUR;
		
		private EntityRef<MIEN> _MIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTOURChanging(string value);
    partial void OnIDTOURChanged();
    partial void OnTENTOURChanging(string value);
    partial void OnTENTOURChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnSONGAYChanging(System.Nullable<int> value);
    partial void OnSONGAYChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnNGAYXUATPHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYXUATPHATChanged();
    partial void OnDIEMDLChanging(string value);
    partial void OnDIEMDLChanged();
    partial void OnIDLOAIChanging(string value);
    partial void OnIDLOAIChanged();
    partial void OnIDMIENChanging(string value);
    partial void OnIDMIENChanged();
    #endregion
		
		public TOURDULICH()
		{
			this._VETOURs = new EntitySet<VETOUR>(new Action<VETOUR>(this.attach_VETOURs), new Action<VETOUR>(this.detach_VETOURs));
			this._LOAITOUR = default(EntityRef<LOAITOUR>);
			this._MIEN = default(EntityRef<MIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTOUR", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDTOUR
		{
			get
			{
				return this._IDTOUR;
			}
			set
			{
				if ((this._IDTOUR != value))
				{
					this.OnIDTOURChanging(value);
					this.SendPropertyChanging();
					this._IDTOUR = value;
					this.SendPropertyChanged("IDTOUR");
					this.OnIDTOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTOUR", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TENTOUR
		{
			get
			{
				return this._TENTOUR;
			}
			set
			{
				if ((this._TENTOUR != value))
				{
					this.OnTENTOURChanging(value);
					this.SendPropertyChanging();
					this._TENTOUR = value;
					this.SendPropertyChanged("TENTOUR");
					this.OnTENTOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(50)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGAY", DbType="Int")]
		public System.Nullable<int> SONGAY
		{
			get
			{
				return this._SONGAY;
			}
			set
			{
				if ((this._SONGAY != value))
				{
					this.OnSONGAYChanging(value);
					this.SendPropertyChanging();
					this._SONGAY = value;
					this.SendPropertyChanged("SONGAY");
					this.OnSONGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYXUATPHAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYXUATPHAT
		{
			get
			{
				return this._NGAYXUATPHAT;
			}
			set
			{
				if ((this._NGAYXUATPHAT != value))
				{
					this.OnNGAYXUATPHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYXUATPHAT = value;
					this.SendPropertyChanged("NGAYXUATPHAT");
					this.OnNGAYXUATPHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMDL", DbType="NVarChar(50)")]
		public string DIEMDL
		{
			get
			{
				return this._DIEMDL;
			}
			set
			{
				if ((this._DIEMDL != value))
				{
					this.OnDIEMDLChanging(value);
					this.SendPropertyChanging();
					this._DIEMDL = value;
					this.SendPropertyChanged("DIEMDL");
					this.OnDIEMDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOAI", DbType="Char(3)")]
		public string IDLOAI
		{
			get
			{
				return this._IDLOAI;
			}
			set
			{
				if ((this._IDLOAI != value))
				{
					if (this._LOAITOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLOAIChanging(value);
					this.SendPropertyChanging();
					this._IDLOAI = value;
					this.SendPropertyChanged("IDLOAI");
					this.OnIDLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMIEN", DbType="Char(3)")]
		public string IDMIEN
		{
			get
			{
				return this._IDMIEN;
			}
			set
			{
				if ((this._IDMIEN != value))
				{
					if (this._MIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMIENChanging(value);
					this.SendPropertyChanging();
					this._IDMIEN = value;
					this.SendPropertyChanged("IDMIEN");
					this.OnIDMIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOURDULICH_VETOUR", Storage="_VETOURs", ThisKey="IDTOUR", OtherKey="IDTOUR")]
		public EntitySet<VETOUR> VETOURs
		{
			get
			{
				return this._VETOURs;
			}
			set
			{
				this._VETOURs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITOUR_TOURDULICH", Storage="_LOAITOUR", ThisKey="IDLOAI", OtherKey="IDLOAI", IsForeignKey=true)]
		public LOAITOUR LOAITOUR
		{
			get
			{
				return this._LOAITOUR.Entity;
			}
			set
			{
				LOAITOUR previousValue = this._LOAITOUR.Entity;
				if (((previousValue != value) 
							|| (this._LOAITOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITOUR.Entity = null;
						previousValue.TOURDULICHes.Remove(this);
					}
					this._LOAITOUR.Entity = value;
					if ((value != null))
					{
						value.TOURDULICHes.Add(this);
						this._IDLOAI = value.IDLOAI;
					}
					else
					{
						this._IDLOAI = default(string);
					}
					this.SendPropertyChanged("LOAITOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MIEN_TOURDULICH", Storage="_MIEN", ThisKey="IDMIEN", OtherKey="IDMIEN", IsForeignKey=true)]
		public MIEN MIEN
		{
			get
			{
				return this._MIEN.Entity;
			}
			set
			{
				MIEN previousValue = this._MIEN.Entity;
				if (((previousValue != value) 
							|| (this._MIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MIEN.Entity = null;
						previousValue.TOURDULICHes.Remove(this);
					}
					this._MIEN.Entity = value;
					if ((value != null))
					{
						value.TOURDULICHes.Add(this);
						this._IDMIEN = value.IDMIEN;
					}
					else
					{
						this._IDMIEN = default(string);
					}
					this.SendPropertyChanged("MIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VETOURs(VETOUR entity)
		{
			this.SendPropertyChanging();
			entity.TOURDULICH = this;
		}
		
		private void detach_VETOURs(VETOUR entity)
		{
			this.SendPropertyChanging();
			entity.TOURDULICH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VEPHONG")]
	public partial class VEPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDON;
		
		private System.Nullable<int> _IDKH;
		
		private string _IDKS;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDONChanging(int value);
    partial void OnIDDONChanged();
    partial void OnIDKHChanging(System.Nullable<int> value);
    partial void OnIDKHChanged();
    partial void OnIDKSChanging(string value);
    partial void OnIDKSChanged();
    #endregion
		
		public VEPHONG()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDON", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDON
		{
			get
			{
				return this._IDDON;
			}
			set
			{
				if ((this._IDDON != value))
				{
					this.OnIDDONChanging(value);
					this.SendPropertyChanging();
					this._IDDON = value;
					this.SendPropertyChanged("IDDON");
					this.OnIDDONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", DbType="Int")]
		public System.Nullable<int> IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKS", DbType="Char(3)")]
		public string IDKS
		{
			get
			{
				return this._IDKS;
			}
			set
			{
				if ((this._IDKS != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKSChanging(value);
					this.SendPropertyChanging();
					this._IDKS = value;
					this.SendPropertyChanged("IDKS");
					this.OnIDKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VEPHONG", Storage="_KHACHHANG", ThisKey="IDKH", OtherKey="IDKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.VEPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.VEPHONGs.Add(this);
						this._IDKH = value.IDKH;
					}
					else
					{
						this._IDKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_VEPHONG", Storage="_KHACHSAN", ThisKey="IDKS", OtherKey="IDKS", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.VEPHONGs.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.VEPHONGs.Add(this);
						this._IDKS = value.IDKS;
					}
					else
					{
						this._IDKS = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VETOUR")]
	public partial class VETOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVE;
		
		private string _IDTOUR;
		
		private System.Nullable<int> _IDKH;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<TOURDULICH> _TOURDULICH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVEChanging(int value);
    partial void OnIDVEChanged();
    partial void OnIDTOURChanging(string value);
    partial void OnIDTOURChanged();
    partial void OnIDKHChanging(System.Nullable<int> value);
    partial void OnIDKHChanged();
    #endregion
		
		public VETOUR()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._TOURDULICH = default(EntityRef<TOURDULICH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVE
		{
			get
			{
				return this._IDVE;
			}
			set
			{
				if ((this._IDVE != value))
				{
					this.OnIDVEChanging(value);
					this.SendPropertyChanging();
					this._IDVE = value;
					this.SendPropertyChanged("IDVE");
					this.OnIDVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTOUR", DbType="Char(3)")]
		public string IDTOUR
		{
			get
			{
				return this._IDTOUR;
			}
			set
			{
				if ((this._IDTOUR != value))
				{
					if (this._TOURDULICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTOURChanging(value);
					this.SendPropertyChanging();
					this._IDTOUR = value;
					this.SendPropertyChanged("IDTOUR");
					this.OnIDTOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", DbType="Int")]
		public System.Nullable<int> IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VETOUR", Storage="_KHACHHANG", ThisKey="IDKH", OtherKey="IDKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.VETOURs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.VETOURs.Add(this);
						this._IDKH = value.IDKH;
					}
					else
					{
						this._IDKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOURDULICH_VETOUR", Storage="_TOURDULICH", ThisKey="IDTOUR", OtherKey="IDTOUR", IsForeignKey=true)]
		public TOURDULICH TOURDULICH
		{
			get
			{
				return this._TOURDULICH.Entity;
			}
			set
			{
				TOURDULICH previousValue = this._TOURDULICH.Entity;
				if (((previousValue != value) 
							|| (this._TOURDULICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOURDULICH.Entity = null;
						previousValue.VETOURs.Remove(this);
					}
					this._TOURDULICH.Entity = value;
					if ((value != null))
					{
						value.VETOURs.Add(this);
						this._IDTOUR = value.IDTOUR;
					}
					else
					{
						this._IDTOUR = default(string);
					}
					this.SendPropertyChanged("TOURDULICH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VEXE")]
	public partial class VEXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVEXE;
		
		private System.Nullable<System.DateTime> _NGAYXP;
		
		private System.Nullable<int> _IDKH;
		
		private string _IDPT;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<PHUONGTIEN> _PHUONGTIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVEXEChanging(int value);
    partial void OnIDVEXEChanged();
    partial void OnNGAYXPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYXPChanged();
    partial void OnIDKHChanging(System.Nullable<int> value);
    partial void OnIDKHChanged();
    partial void OnIDPTChanging(string value);
    partial void OnIDPTChanged();
    #endregion
		
		public VEXE()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._PHUONGTIEN = default(EntityRef<PHUONGTIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVEXE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVEXE
		{
			get
			{
				return this._IDVEXE;
			}
			set
			{
				if ((this._IDVEXE != value))
				{
					this.OnIDVEXEChanging(value);
					this.SendPropertyChanging();
					this._IDVEXE = value;
					this.SendPropertyChanged("IDVEXE");
					this.OnIDVEXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYXP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYXP
		{
			get
			{
				return this._NGAYXP;
			}
			set
			{
				if ((this._NGAYXP != value))
				{
					this.OnNGAYXPChanging(value);
					this.SendPropertyChanging();
					this._NGAYXP = value;
					this.SendPropertyChanged("NGAYXP");
					this.OnNGAYXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", DbType="Int")]
		public System.Nullable<int> IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPT", DbType="Char(3)")]
		public string IDPT
		{
			get
			{
				return this._IDPT;
			}
			set
			{
				if ((this._IDPT != value))
				{
					if (this._PHUONGTIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPTChanging(value);
					this.SendPropertyChanging();
					this._IDPT = value;
					this.SendPropertyChanged("IDPT");
					this.OnIDPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VEXE", Storage="_KHACHHANG", ThisKey="IDKH", OtherKey="IDKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.VEXEs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.VEXEs.Add(this);
						this._IDKH = value.IDKH;
					}
					else
					{
						this._IDKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_VEXE", Storage="_PHUONGTIEN", ThisKey="IDPT", OtherKey="IDPT", IsForeignKey=true)]
		public PHUONGTIEN PHUONGTIEN
		{
			get
			{
				return this._PHUONGTIEN.Entity;
			}
			set
			{
				PHUONGTIEN previousValue = this._PHUONGTIEN.Entity;
				if (((previousValue != value) 
							|| (this._PHUONGTIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONGTIEN.Entity = null;
						previousValue.VEXEs.Remove(this);
					}
					this._PHUONGTIEN.Entity = value;
					if ((value != null))
					{
						value.VEXEs.Add(this);
						this._IDPT = value.IDPT;
					}
					else
					{
						this._IDPT = default(string);
					}
					this.SendPropertyChanged("PHUONGTIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
